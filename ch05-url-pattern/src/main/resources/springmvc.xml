<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!--    声明组件扫描器-->
    <context:component-scan base-package="com.bjpowdernode.controller"/>

<!--    声明springmvc 框架中的视图解析器，帮助开发人员设置视图文件路径-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<!--        前缀：视图文件的路径  value中的斜杠：
                        第一个斜杠代表是web的根目录，第二个斜杠表示是一个目录
        -->
        <property name="prefix" value="/WEB-INF/view/"></property>
<!--        后缀：表示视图文件的扩展名-->
        <property name="suffix" value=".jsp"/>
    </bean>


<!--    加入注解驱动-->
    <mvc:annotation-driven/>


    <!--    第一种处理静态资源无法访问的问题：
        需要springmvc配置文件加入<mvc:default-servlet-handler>
        原理是： 加入这个标签后，框架会创建控制类对象DefaultServletHttpRequestHandler(类型我们自己创建MyController)
                这个对象可以把接收到的请求转发给tomcat的default这个servlet来干活。tomcat可以处理静态资源问题，
-->
<!--    <mvc:default-servlet-handler/>-->


<!--    第二种处理静态资源无法访问的问题：
        mvc:resources 加入后框架会创建 ResourceHttpRequestHandler这个对象，让这个对象处理静态资源的访问，
        不依赖tomcat服务器。
        mapping：访问静态资源的uri地址，使用通配符  **
        location:静态资源在你项目中的目录位置.

         mapping="images/**"  images：表示images目录    **:表示通配符，表示images目录下的所有文件或子文件夹的资源

         location="/images/"  /表示webapp根目录下   images/ 表示images目录下
-->
<!--    <mvc:resources mapping="/images/**" location="/images/"/>-->
<!--    <mvc:resources mapping="/html/**" location="/html/"/>-->
<!--    当我们的静态资源页面过多是，这种方式要写的代码比较多，我们可以把静态资源放到一个
        static文件夹中，mapping值设置为/static/**  location:/static/
-->
<!--    使用一个配置语句，指定多种静态资源的访问-->
    <mvc:resources mapping="/static/**" location="/static/"/>

</beans>